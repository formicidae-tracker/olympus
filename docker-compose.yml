# Sample docker-compose for testing purpose. Most likely you would
# need to adapt in production environment ( SSL ...)

version: "3.9"

services:
  olympus:
    build:
      context: .
    ports:
      - "3001:3001"
    hostname: olympus-dev
    extra_hosts:
      - signoz:host-gateway
    environment:
      - OLYMPUS_DATA_HOME=/data/olympus
      - OLYMPUS_OTEL_ENDPOINT=signoz:4317
      - OLYMPUS_LOGSTASH_ENDPOINT=signoz:3333
    command:
      # In production, you would want to avoid this.
      - run
      - -vvv
    env_file:
      - .vapid.env
      - .secret.env
    volumes:
      - olympus-data:/data/olympus
    labels:
      - traefik.http.routers.olympus.rule=PathPrefix("/api")
      - traefik.http.services.olympus.loadbalancer.server.port=3000


  rtmp:
    build:
      context: docker
      dockerfile: Dockerfile.rtmp
    ports:
      - "1935:1935"
      - "8888:8888"
    volumes:
      - srv-data:/srv
    labels:
      - traefik.http.routers.rtmp.rule=PathPrefix("/olympus")
      - traefik.http.services.rtmp.loadbalancer.server.port=8888

  thumbnails:
    image: caddy:latest
    volumes:
      - srv-data:/usr/share/caddy
    labels:
      - traefik.http.routers.thumbnails.rule=PathPrefix("/thumbnails/olympus/")
      - traefik.http.services.thumbnails.loadbalancer.server.port=80


  webapp:
    build:
      context: webapp
    labels:
      - traefik.http.routers.webapp.rule=PathPrefix("/")
      - traefik.http.services.webapp.loadbalancer.server.port=80

  traefik:
    image: traefik:v3.0.0-beta3
    extra_hosts:
      - signoz:host-gateway
    command:
      - --entrypoints.web.address=:80
      - --providers.docker
      - --metrics.openTelemetry=true
      - --metrics.openTelemetry.address=signoz:4317
      - --metrics.openTelemetry.insecure=true
      - --metrics.openTelemetry.grpc=true
      - --tracing.openTelemetry=true
      - --tracing.openTelemetry.address=signoz:4317
      - --tracing.openTelemetry.insecure=true
      - --tracing.openTelemetry.grpc=true
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  srv-data:
  olympus-data:
