syntax = "proto3";

option  go_package = ".;api";
package fort.olympus;

import "google/protobuf/timestamp.proto";

message ClimateReport {
	repeated float            temperatures = 2;
	optional float            humidity     = 3;
	google.protobuf.Timestamp time         = 4;
}

enum AlarmStatus {
	ON  = 0;
	OFF = 1;
}

enum AlarmLevel {
	WARNING   = 0;
	EMERGENCY = 1;
}

message AlarmEvent {
	reserved "reason";

	string                    identification = 1;
	AlarmLevel                level          = 2;
	AlarmStatus               status         = 3;
	google.protobuf.Timestamp time           = 4;
	string                    description    = 5;
}

message ClimateState {
	string         name          = 1;
	optional float temperature   = 2;
	optional float humidity      = 3;
	optional float wind          = 4;
	optional float visible_light = 5;
	optional float uv_light      = 6;
}

message ClimateDeclaration {
	string         host                      = 1;
	string         name                      = 2;
	optional float min_temperature           = 3;
	optional float max_temperature           = 4;
	optional float min_humidity              = 5;
	optional float max_humidity              = 6;
	optional google.protobuf.Timestamp since = 7;
}

message ClimateTarget {
	ClimateState          current                = 1;
	optional ClimateState current_end            = 2;
	optional ClimateState next                   = 3;
	optional ClimateState next_end               = 4;
	optional google.protobuf.Timestamp next_time = 5;
}

message ClimateUpStream {
	optional ClimateDeclaration declaration = 1;
	repeated ClimateReport      reports     = 2;
	optional ClimateTarget      target      = 3;
	repeated AlarmEvent         alarms      = 4;
}

message ClimateRegistrationConfirmation {
	bool  send_backlogs = 1;
	int32 page_size     = 2;
}

message ClimateDownStream {
	ClimateRegistrationConfirmation registration_confirmation = 1;
}

message TrackingDeclaration {
	string   hostname                        = 1;
	string   stream_server                   = 2;
	string   experiment_name                 = 3;
	optional google.protobuf.Timestamp since = 4;
}

message DiskStatus {
	int64 total_bytes      = 1;
	int64 free_bytes       = 2;
	int64 bytes_per_second = 3;
}

message TrackingUpStream {
	optional TrackingDeclaration declaration = 1;
	repeated AlarmEvent          alarms      = 2;
	optional DiskStatus          disk_status = 3;
}

message TrackingDownStream {}

service Olympus {
	rpc Climate(stream ClimateUpStream) returns (stream ClimateDownStream);
	rpc Tracking(stream TrackingUpStream) returns (stream TrackingDownStream);
}
