// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: api/olympus_service.proto

package api

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlarmStatus int32

const (
	AlarmStatus_ON  AlarmStatus = 0
	AlarmStatus_OFF AlarmStatus = 1
)

// Enum value maps for AlarmStatus.
var (
	AlarmStatus_name = map[int32]string{
		0: "ON",
		1: "OFF",
	}
	AlarmStatus_value = map[string]int32{
		"ON":  0,
		"OFF": 1,
	}
)

func (x AlarmStatus) Enum() *AlarmStatus {
	p := new(AlarmStatus)
	*p = x
	return p
}

func (x AlarmStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_olympus_service_proto_enumTypes[0].Descriptor()
}

func (AlarmStatus) Type() protoreflect.EnumType {
	return &file_api_olympus_service_proto_enumTypes[0]
}

func (x AlarmStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlarmStatus.Descriptor instead.
func (AlarmStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{0}
}

type AlarmLevel int32

const (
	AlarmLevel_WARNING   AlarmLevel = 0
	AlarmLevel_EMERGENCY AlarmLevel = 1
)

// Enum value maps for AlarmLevel.
var (
	AlarmLevel_name = map[int32]string{
		0: "WARNING",
		1: "EMERGENCY",
	}
	AlarmLevel_value = map[string]int32{
		"WARNING":   0,
		"EMERGENCY": 1,
	}
)

func (x AlarmLevel) Enum() *AlarmLevel {
	p := new(AlarmLevel)
	*p = x
	return p
}

func (x AlarmLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_olympus_service_proto_enumTypes[1].Descriptor()
}

func (AlarmLevel) Type() protoreflect.EnumType {
	return &file_api_olympus_service_proto_enumTypes[1]
}

func (x AlarmLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlarmLevel.Descriptor instead.
func (AlarmLevel) EnumDescriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{1}
}

type ClimateReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperatures []float32            `protobuf:"fixed32,2,rep,packed,name=temperatures,proto3" json:"temperatures,omitempty"`
	Humidity     *float32             `protobuf:"fixed32,3,opt,name=humidity,proto3,oneof" json:"humidity,omitempty"`
	Time         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ClimateReport) Reset() {
	*x = ClimateReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateReport) ProtoMessage() {}

func (x *ClimateReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateReport.ProtoReflect.Descriptor instead.
func (*ClimateReport) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{0}
}

func (x *ClimateReport) GetTemperatures() []float32 {
	if x != nil {
		return x.Temperatures
	}
	return nil
}

func (x *ClimateReport) GetHumidity() float32 {
	if x != nil && x.Humidity != nil {
		return *x.Humidity
	}
	return 0
}

func (x *ClimateReport) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlarmUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identification string               `protobuf:"bytes,1,opt,name=identification,proto3" json:"identification,omitempty"`
	Level          AlarmLevel           `protobuf:"varint,2,opt,name=level,proto3,enum=fort.olympus.AlarmLevel" json:"level,omitempty"`
	Status         AlarmStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=fort.olympus.AlarmStatus" json:"status,omitempty"`
	Time           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Description    string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AlarmUpdate) Reset() {
	*x = AlarmUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmUpdate) ProtoMessage() {}

func (x *AlarmUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmUpdate.ProtoReflect.Descriptor instead.
func (*AlarmUpdate) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{1}
}

func (x *AlarmUpdate) GetIdentification() string {
	if x != nil {
		return x.Identification
	}
	return ""
}

func (x *AlarmUpdate) GetLevel() AlarmLevel {
	if x != nil {
		return x.Level
	}
	return AlarmLevel_WARNING
}

func (x *AlarmUpdate) GetStatus() AlarmStatus {
	if x != nil {
		return x.Status
	}
	return AlarmStatus_ON
}

func (x *AlarmUpdate) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AlarmUpdate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ClimateState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Temperature  *float32 `protobuf:"fixed32,2,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	Humidity     *float32 `protobuf:"fixed32,3,opt,name=humidity,proto3,oneof" json:"humidity,omitempty"`
	Wind         *float32 `protobuf:"fixed32,4,opt,name=wind,proto3,oneof" json:"wind,omitempty"`
	VisibleLight *float32 `protobuf:"fixed32,5,opt,name=visible_light,json=visibleLight,proto3,oneof" json:"visible_light,omitempty"`
	UvLight      *float32 `protobuf:"fixed32,6,opt,name=uv_light,json=uvLight,proto3,oneof" json:"uv_light,omitempty"`
}

func (x *ClimateState) Reset() {
	*x = ClimateState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateState) ProtoMessage() {}

func (x *ClimateState) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateState.ProtoReflect.Descriptor instead.
func (*ClimateState) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{2}
}

func (x *ClimateState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClimateState) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *ClimateState) GetHumidity() float32 {
	if x != nil && x.Humidity != nil {
		return *x.Humidity
	}
	return 0
}

func (x *ClimateState) GetWind() float32 {
	if x != nil && x.Wind != nil {
		return *x.Wind
	}
	return 0
}

func (x *ClimateState) GetVisibleLight() float32 {
	if x != nil && x.VisibleLight != nil {
		return *x.VisibleLight
	}
	return 0
}

func (x *ClimateState) GetUvLight() float32 {
	if x != nil && x.UvLight != nil {
		return *x.UvLight
	}
	return 0
}

type ClimateDeclaration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host           string               `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Name           string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinTemperature *float32             `protobuf:"fixed32,3,opt,name=min_temperature,json=minTemperature,proto3,oneof" json:"min_temperature,omitempty"`
	MaxTemperature *float32             `protobuf:"fixed32,4,opt,name=max_temperature,json=maxTemperature,proto3,oneof" json:"max_temperature,omitempty"`
	MinHumidity    *float32             `protobuf:"fixed32,5,opt,name=min_humidity,json=minHumidity,proto3,oneof" json:"min_humidity,omitempty"`
	MaxHumidity    *float32             `protobuf:"fixed32,6,opt,name=max_humidity,json=maxHumidity,proto3,oneof" json:"max_humidity,omitempty"`
	Since          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=since,proto3,oneof" json:"since,omitempty"`
}

func (x *ClimateDeclaration) Reset() {
	*x = ClimateDeclaration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateDeclaration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateDeclaration) ProtoMessage() {}

func (x *ClimateDeclaration) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateDeclaration.ProtoReflect.Descriptor instead.
func (*ClimateDeclaration) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{3}
}

func (x *ClimateDeclaration) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ClimateDeclaration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClimateDeclaration) GetMinTemperature() float32 {
	if x != nil && x.MinTemperature != nil {
		return *x.MinTemperature
	}
	return 0
}

func (x *ClimateDeclaration) GetMaxTemperature() float32 {
	if x != nil && x.MaxTemperature != nil {
		return *x.MaxTemperature
	}
	return 0
}

func (x *ClimateDeclaration) GetMinHumidity() float32 {
	if x != nil && x.MinHumidity != nil {
		return *x.MinHumidity
	}
	return 0
}

func (x *ClimateDeclaration) GetMaxHumidity() float32 {
	if x != nil && x.MaxHumidity != nil {
		return *x.MaxHumidity
	}
	return 0
}

func (x *ClimateDeclaration) GetSince() *timestamp.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

type ClimateTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    *ClimateState        `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	CurrentEnd *ClimateState        `protobuf:"bytes,2,opt,name=current_end,json=currentEnd,proto3,oneof" json:"current_end,omitempty"`
	Next       *ClimateState        `protobuf:"bytes,3,opt,name=next,proto3,oneof" json:"next,omitempty"`
	NextEnd    *ClimateState        `protobuf:"bytes,4,opt,name=next_end,json=nextEnd,proto3,oneof" json:"next_end,omitempty"`
	NextTime   *timestamp.Timestamp `protobuf:"bytes,5,opt,name=next_time,json=nextTime,proto3,oneof" json:"next_time,omitempty"`
}

func (x *ClimateTarget) Reset() {
	*x = ClimateTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateTarget) ProtoMessage() {}

func (x *ClimateTarget) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateTarget.ProtoReflect.Descriptor instead.
func (*ClimateTarget) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{4}
}

func (x *ClimateTarget) GetCurrent() *ClimateState {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *ClimateTarget) GetCurrentEnd() *ClimateState {
	if x != nil {
		return x.CurrentEnd
	}
	return nil
}

func (x *ClimateTarget) GetNext() *ClimateState {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ClimateTarget) GetNextEnd() *ClimateState {
	if x != nil {
		return x.NextEnd
	}
	return nil
}

func (x *ClimateTarget) GetNextTime() *timestamp.Timestamp {
	if x != nil {
		return x.NextTime
	}
	return nil
}

type ClimateUpStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Declaration *ClimateDeclaration `protobuf:"bytes,1,opt,name=declaration,proto3,oneof" json:"declaration,omitempty"`
	Reports     []*ClimateReport    `protobuf:"bytes,2,rep,name=reports,proto3" json:"reports,omitempty"`
	Target      *ClimateTarget      `protobuf:"bytes,3,opt,name=target,proto3,oneof" json:"target,omitempty"`
	Alarms      []*AlarmUpdate      `protobuf:"bytes,4,rep,name=alarms,proto3" json:"alarms,omitempty"`
	Backlog     bool                `protobuf:"varint,5,opt,name=backlog,proto3" json:"backlog,omitempty"`
}

func (x *ClimateUpStream) Reset() {
	*x = ClimateUpStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateUpStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateUpStream) ProtoMessage() {}

func (x *ClimateUpStream) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateUpStream.ProtoReflect.Descriptor instead.
func (*ClimateUpStream) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{5}
}

func (x *ClimateUpStream) GetDeclaration() *ClimateDeclaration {
	if x != nil {
		return x.Declaration
	}
	return nil
}

func (x *ClimateUpStream) GetReports() []*ClimateReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *ClimateUpStream) GetTarget() *ClimateTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ClimateUpStream) GetAlarms() []*AlarmUpdate {
	if x != nil {
		return x.Alarms
	}
	return nil
}

func (x *ClimateUpStream) GetBacklog() bool {
	if x != nil {
		return x.Backlog
	}
	return false
}

type ClimateRegistrationConfirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendBacklogs bool  `protobuf:"varint,1,opt,name=send_backlogs,json=sendBacklogs,proto3" json:"send_backlogs,omitempty"`
	PageSize     int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ClimateRegistrationConfirmation) Reset() {
	*x = ClimateRegistrationConfirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateRegistrationConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateRegistrationConfirmation) ProtoMessage() {}

func (x *ClimateRegistrationConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateRegistrationConfirmation.ProtoReflect.Descriptor instead.
func (*ClimateRegistrationConfirmation) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{6}
}

func (x *ClimateRegistrationConfirmation) GetSendBacklogs() bool {
	if x != nil {
		return x.SendBacklogs
	}
	return false
}

func (x *ClimateRegistrationConfirmation) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ClimateDownStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationConfirmation *ClimateRegistrationConfirmation `protobuf:"bytes,1,opt,name=registration_confirmation,json=registrationConfirmation,proto3" json:"registration_confirmation,omitempty"`
}

func (x *ClimateDownStream) Reset() {
	*x = ClimateDownStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClimateDownStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClimateDownStream) ProtoMessage() {}

func (x *ClimateDownStream) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClimateDownStream.ProtoReflect.Descriptor instead.
func (*ClimateDownStream) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{7}
}

func (x *ClimateDownStream) GetRegistrationConfirmation() *ClimateRegistrationConfirmation {
	if x != nil {
		return x.RegistrationConfirmation
	}
	return nil
}

type TrackingDeclaration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname       string               `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	StreamServer   string               `protobuf:"bytes,2,opt,name=stream_server,json=streamServer,proto3" json:"stream_server,omitempty"`
	ExperimentName string               `protobuf:"bytes,3,opt,name=experiment_name,json=experimentName,proto3" json:"experiment_name,omitempty"`
	Since          *timestamp.Timestamp `protobuf:"bytes,4,opt,name=since,proto3,oneof" json:"since,omitempty"`
}

func (x *TrackingDeclaration) Reset() {
	*x = TrackingDeclaration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingDeclaration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingDeclaration) ProtoMessage() {}

func (x *TrackingDeclaration) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingDeclaration.ProtoReflect.Descriptor instead.
func (*TrackingDeclaration) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{8}
}

func (x *TrackingDeclaration) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *TrackingDeclaration) GetStreamServer() string {
	if x != nil {
		return x.StreamServer
	}
	return ""
}

func (x *TrackingDeclaration) GetExperimentName() string {
	if x != nil {
		return x.ExperimentName
	}
	return ""
}

func (x *TrackingDeclaration) GetSince() *timestamp.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

type DiskStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBytes     int64 `protobuf:"varint,1,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	FreeBytes      int64 `protobuf:"varint,2,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
	BytesPerSecond int64 `protobuf:"varint,3,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
}

func (x *DiskStatus) Reset() {
	*x = DiskStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStatus) ProtoMessage() {}

func (x *DiskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStatus.ProtoReflect.Descriptor instead.
func (*DiskStatus) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{9}
}

func (x *DiskStatus) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DiskStatus) GetFreeBytes() int64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *DiskStatus) GetBytesPerSecond() int64 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

type TrackingUpStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Declaration *TrackingDeclaration `protobuf:"bytes,1,opt,name=declaration,proto3,oneof" json:"declaration,omitempty"`
	Alarms      []*AlarmUpdate       `protobuf:"bytes,2,rep,name=alarms,proto3" json:"alarms,omitempty"`
	DiskStatus  *DiskStatus          `protobuf:"bytes,3,opt,name=disk_status,json=diskStatus,proto3,oneof" json:"disk_status,omitempty"`
}

func (x *TrackingUpStream) Reset() {
	*x = TrackingUpStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingUpStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingUpStream) ProtoMessage() {}

func (x *TrackingUpStream) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingUpStream.ProtoReflect.Descriptor instead.
func (*TrackingUpStream) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{10}
}

func (x *TrackingUpStream) GetDeclaration() *TrackingDeclaration {
	if x != nil {
		return x.Declaration
	}
	return nil
}

func (x *TrackingUpStream) GetAlarms() []*AlarmUpdate {
	if x != nil {
		return x.Alarms
	}
	return nil
}

func (x *TrackingUpStream) GetDiskStatus() *DiskStatus {
	if x != nil {
		return x.DiskStatus
	}
	return nil
}

type TrackingDownStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TrackingDownStream) Reset() {
	*x = TrackingDownStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_olympus_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingDownStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingDownStream) ProtoMessage() {}

func (x *TrackingDownStream) ProtoReflect() protoreflect.Message {
	mi := &file_api_olympus_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingDownStream.ProtoReflect.Descriptor instead.
func (*TrackingDownStream) Descriptor() ([]byte, []int) {
	return file_api_olympus_service_proto_rawDescGZIP(), []int{11}
}

var File_api_olympus_service_proto protoreflect.FileDescriptor

var file_api_olympus_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x66, 0x6f, 0x72,
	0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x43,
	0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x00, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0xf2,
	0x01, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x92, 0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x01, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02,
	0x52, 0x04, 0x77, 0x69, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x75, 0x76, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x07, 0x75, 0x76, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x75, 0x76, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0xf3, 0x02, 0x0a, 0x12, 0x43, 0x6c, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x00, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x75, 0x6d, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d,
	0x61, 0x78, 0x5f, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04,
	0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x75, 0x6d, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x75, 0x6d, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xea,
	0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x34, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73,
	0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43,
	0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52, 0x07, 0x6e,
	0x65, 0x78, 0x74, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x65, 0x78, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xb3, 0x02, 0x0a, 0x0f,
	0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x47, 0x0a, 0x0b, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x38, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43,
	0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x01, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62,
	0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x63, 0x0a, 0x1f, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x42, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7f, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x6a, 0x0a, 0x19, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x76, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55,
	0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x48, 0x0a, 0x0b, 0x64, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66,
	0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73,
	0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2a, 0x1e, 0x0a, 0x0b, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x2a, 0x28, 0x0a, 0x0a, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x4e,
	0x43, 0x59, 0x10, 0x01, 0x32, 0xaa, 0x01, 0x0a, 0x07, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73,
	0x12, 0x4d, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x1f, 0x2e, 0x66, 0x6f, 0x72,
	0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x50, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x20, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x2e, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_olympus_service_proto_rawDescOnce sync.Once
	file_api_olympus_service_proto_rawDescData = file_api_olympus_service_proto_rawDesc
)

func file_api_olympus_service_proto_rawDescGZIP() []byte {
	file_api_olympus_service_proto_rawDescOnce.Do(func() {
		file_api_olympus_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_olympus_service_proto_rawDescData)
	})
	return file_api_olympus_service_proto_rawDescData
}

var file_api_olympus_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_olympus_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_olympus_service_proto_goTypes = []interface{}{
	(AlarmStatus)(0),                        // 0: fort.olympus.AlarmStatus
	(AlarmLevel)(0),                         // 1: fort.olympus.AlarmLevel
	(*ClimateReport)(nil),                   // 2: fort.olympus.ClimateReport
	(*AlarmUpdate)(nil),                     // 3: fort.olympus.AlarmUpdate
	(*ClimateState)(nil),                    // 4: fort.olympus.ClimateState
	(*ClimateDeclaration)(nil),              // 5: fort.olympus.ClimateDeclaration
	(*ClimateTarget)(nil),                   // 6: fort.olympus.ClimateTarget
	(*ClimateUpStream)(nil),                 // 7: fort.olympus.ClimateUpStream
	(*ClimateRegistrationConfirmation)(nil), // 8: fort.olympus.ClimateRegistrationConfirmation
	(*ClimateDownStream)(nil),               // 9: fort.olympus.ClimateDownStream
	(*TrackingDeclaration)(nil),             // 10: fort.olympus.TrackingDeclaration
	(*DiskStatus)(nil),                      // 11: fort.olympus.DiskStatus
	(*TrackingUpStream)(nil),                // 12: fort.olympus.TrackingUpStream
	(*TrackingDownStream)(nil),              // 13: fort.olympus.TrackingDownStream
	(*timestamp.Timestamp)(nil),             // 14: google.protobuf.Timestamp
}
var file_api_olympus_service_proto_depIdxs = []int32{
	14, // 0: fort.olympus.ClimateReport.time:type_name -> google.protobuf.Timestamp
	1,  // 1: fort.olympus.AlarmUpdate.level:type_name -> fort.olympus.AlarmLevel
	0,  // 2: fort.olympus.AlarmUpdate.status:type_name -> fort.olympus.AlarmStatus
	14, // 3: fort.olympus.AlarmUpdate.time:type_name -> google.protobuf.Timestamp
	14, // 4: fort.olympus.ClimateDeclaration.since:type_name -> google.protobuf.Timestamp
	4,  // 5: fort.olympus.ClimateTarget.current:type_name -> fort.olympus.ClimateState
	4,  // 6: fort.olympus.ClimateTarget.current_end:type_name -> fort.olympus.ClimateState
	4,  // 7: fort.olympus.ClimateTarget.next:type_name -> fort.olympus.ClimateState
	4,  // 8: fort.olympus.ClimateTarget.next_end:type_name -> fort.olympus.ClimateState
	14, // 9: fort.olympus.ClimateTarget.next_time:type_name -> google.protobuf.Timestamp
	5,  // 10: fort.olympus.ClimateUpStream.declaration:type_name -> fort.olympus.ClimateDeclaration
	2,  // 11: fort.olympus.ClimateUpStream.reports:type_name -> fort.olympus.ClimateReport
	6,  // 12: fort.olympus.ClimateUpStream.target:type_name -> fort.olympus.ClimateTarget
	3,  // 13: fort.olympus.ClimateUpStream.alarms:type_name -> fort.olympus.AlarmUpdate
	8,  // 14: fort.olympus.ClimateDownStream.registration_confirmation:type_name -> fort.olympus.ClimateRegistrationConfirmation
	14, // 15: fort.olympus.TrackingDeclaration.since:type_name -> google.protobuf.Timestamp
	10, // 16: fort.olympus.TrackingUpStream.declaration:type_name -> fort.olympus.TrackingDeclaration
	3,  // 17: fort.olympus.TrackingUpStream.alarms:type_name -> fort.olympus.AlarmUpdate
	11, // 18: fort.olympus.TrackingUpStream.disk_status:type_name -> fort.olympus.DiskStatus
	7,  // 19: fort.olympus.Olympus.Climate:input_type -> fort.olympus.ClimateUpStream
	12, // 20: fort.olympus.Olympus.Tracking:input_type -> fort.olympus.TrackingUpStream
	9,  // 21: fort.olympus.Olympus.Climate:output_type -> fort.olympus.ClimateDownStream
	13, // 22: fort.olympus.Olympus.Tracking:output_type -> fort.olympus.TrackingDownStream
	21, // [21:23] is the sub-list for method output_type
	19, // [19:21] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_olympus_service_proto_init() }
func file_api_olympus_service_proto_init() {
	if File_api_olympus_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_olympus_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateDeclaration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateUpStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateRegistrationConfirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClimateDownStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingDeclaration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingUpStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_olympus_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingDownStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_olympus_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_olympus_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_api_olympus_service_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_api_olympus_service_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_api_olympus_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_api_olympus_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_api_olympus_service_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_olympus_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_olympus_service_proto_goTypes,
		DependencyIndexes: file_api_olympus_service_proto_depIdxs,
		EnumInfos:         file_api_olympus_service_proto_enumTypes,
		MessageInfos:      file_api_olympus_service_proto_msgTypes,
	}.Build()
	File_api_olympus_service_proto = out.File
	file_api_olympus_service_proto_rawDesc = nil
	file_api_olympus_service_proto_goTypes = nil
	file_api_olympus_service_proto_depIdxs = nil
}
